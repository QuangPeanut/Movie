{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Downloads/Movie-main 2/src/pages/detail/VideoList.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useParams } from \"react-router\";\nimport tmdbApi from \"../../api/tmdbApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst VideoList = props => {\n  _s();\n\n  const {\n    category\n  } = useParams();\n  const [videos, setVideos] = useState([]);\n  useEffect(() => {\n    const getVideos = async () => {\n      const res = await tmdbApi.getVideos(category, props.id);\n      setVideos(res.data.results.slice(0, 5));\n    };\n\n    getVideos();\n  }, [category, props.id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: videos.map((item, i) => /*#__PURE__*/_jsxDEV(Video, {\n      item: item\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n\n_s(VideoList, \"5pQh/qMoQBbcpRaFCCA51Gq5JtU=\", false, function () {\n  return [useParams];\n});\n\n_c = VideoList;\n\nconst Video = props => {\n  _s2();\n\n  const item = props.item;\n  const iframeRef = useRef(null);\n  useEffect(() => {\n    const height = iframeRef.current.offsetWidth * 9 / 16 + \"px\";\n    iframeRef.current.setAttribute(\"height\", height);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video__title\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n      src: `https://www.youtube.com/embed/${item.key}`,\n      ref: iframeRef,\n      width: \"100%\",\n      title: \"video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Video, \"xrPm9S+7ob9FwtLVsZjNguOLSgs=\");\n\n_c2 = Video;\nexport default VideoList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"VideoList\");\n$RefreshReg$(_c2, \"Video\");","map":{"version":3,"sources":["/Users/macbook/Downloads/Movie-main 2/src/pages/detail/VideoList.jsx"],"names":["React","useState","useEffect","useRef","useParams","tmdbApi","VideoList","props","category","videos","setVideos","getVideos","res","id","data","results","slice","map","item","i","Video","iframeRef","height","current","offsetWidth","setAttribute","name","key"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,OAAP,MAAoB,mBAApB;;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAeJ,SAAS,EAA9B;AAEA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,SAAS,GAAG,YAAY;AAC5B,YAAMC,GAAG,GAAG,MAAMP,OAAO,CAACM,SAAR,CAAkBH,QAAlB,EAA4BD,KAAK,CAACM,EAAlC,CAAlB;AACAH,MAAAA,SAAS,CAACE,GAAG,CAACE,IAAJ,CAASC,OAAT,CAAiBC,KAAjB,CAAuB,CAAvB,EAA0B,CAA1B,CAAD,CAAT;AACD,KAHD;;AAIAL,IAAAA,SAAS;AACV,GANQ,EAMN,CAACH,QAAD,EAAWD,KAAK,CAACM,EAAjB,CANM,CAAT;AAQA,sBACE;AAAA,cACGJ,MAAM,CAACQ,GAAP,CAAW,CAACC,IAAD,EAAOC,CAAP,kBACV,QAAC,KAAD;AAAe,MAAA,IAAI,EAAED;AAArB,OAAYC,CAAZ;AAAA;AAAA;AAAA;AAAA,YADD;AADH,mBADF;AAOD,CApBD;;GAAMb,S;UACiBF,S;;;KADjBE,S;;AAsBN,MAAMc,KAAK,GAAIb,KAAD,IAAW;AAAA;;AACvB,QAAMW,IAAI,GAAGX,KAAK,CAACW,IAAnB;AAEA,QAAMG,SAAS,GAAGlB,MAAM,CAAC,IAAD,CAAxB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMoB,MAAM,GAAID,SAAS,CAACE,OAAV,CAAkBC,WAAlB,GAAgC,CAAjC,GAAsC,EAAtC,GAA2C,IAA1D;AACAH,IAAAA,SAAS,CAACE,OAAV,CAAkBE,YAAlB,CAA+B,QAA/B,EAAyCH,MAAzC;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA,kBAAKJ,IAAI,CAACQ;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AACE,MAAA,GAAG,EAAG,iCAAgCR,IAAI,CAACS,GAAI,EADjD;AAEE,MAAA,GAAG,EAAEN,SAFP;AAGE,MAAA,KAAK,EAAC,MAHR;AAIE,MAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAvBD;;IAAMD,K;;MAAAA,K;AAyBN,eAAed,SAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useParams } from \"react-router\";\nimport tmdbApi from \"../../api/tmdbApi\";\n\nconst VideoList = (props) => {\n  const { category } = useParams();\n\n  const [videos, setVideos] = useState([]);\n\n  useEffect(() => {\n    const getVideos = async () => {\n      const res = await tmdbApi.getVideos(category, props.id);\n      setVideos(res.data.results.slice(0, 5));\n    };\n    getVideos();\n  }, [category, props.id]);\n\n  return (\n    <>\n      {videos.map((item, i) => (\n        <Video key={i} item={item} />\n      ))}\n    </>\n  );\n};\n\nconst Video = (props) => {\n  const item = props.item;\n\n  const iframeRef = useRef(null);\n\n  useEffect(() => {\n    const height = (iframeRef.current.offsetWidth * 9) / 16 + \"px\";\n    iframeRef.current.setAttribute(\"height\", height);\n  }, []);\n\n  return (\n    <div className=\"video\">\n      <div className=\"video__title\">\n        <h2>{item.name}</h2>\n      </div>\n      <iframe\n        src={`https://www.youtube.com/embed/${item.key}`}\n        ref={iframeRef}\n        width=\"100%\"\n        title=\"video\"\n      ></iframe>\n    </div>\n  );\n};\n\nexport default VideoList;\n"]},"metadata":{},"sourceType":"module"}