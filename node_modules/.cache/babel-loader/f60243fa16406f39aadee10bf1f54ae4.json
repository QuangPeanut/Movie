{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Downloads/Movie-main 2/src/components/hero-slide/HeroSlide.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport SwiperCore, { Autoplay } from \"swiper\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport Button, { OutlineButton } from \"../button/Button\";\nimport Modal, { ModalContent } from \"../modal/Modal\";\nimport tmdbApi, { category, movieType } from \"../../api/tmdbApi\";\nimport apiConfig from \"../../api/apiConfig\";\nimport \"./hero-slide.scss\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HeroSlide = () => {\n  _s();\n\n  SwiperCore.use([Autoplay]);\n  const [movieItems, setMovieItems] = useState([]);\n  useEffect(() => {\n    const getMovies = async () => {\n      const params = {\n        page: 1\n      };\n\n      try {\n        const response = await tmdbApi.getMoviesList(movieType.popular, {\n          params\n        });\n        setMovieItems(response.data.results.slice(1, 4));\n      } catch {\n        console.log(\"error\");\n      }\n    };\n\n    getMovies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hero-slide\",\n    children: [/*#__PURE__*/_jsxDEV(Swiper, {\n      modules: [Autoplay],\n      grabCursor: true,\n      spaceBetween: 0,\n      slidesPerView: 1 // autoplay={{delay: 3000}}\n      ,\n      children: movieItems.map((item, i) => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n        children: _ref => {\n          let {\n            isActive\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(HeroSlideItem, {\n            item: item,\n            className: `${isActive ? \"active\" : \"\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this);\n        }\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), movieItems.map((item, i) => /*#__PURE__*/_jsxDEV(TrailerModal, {\n      item: item\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HeroSlide, \"v2ja/IALY/F/8AFwp1LDsPz/EqM=\");\n\n_c = HeroSlide;\n\nconst HeroSlideItem = props => {\n  _s2();\n\n  let navigate = useNavigate();\n  const item = props.item;\n  const background = apiConfig.originalImage(item.backdrop_path ? item.backdrop_path : item.poster_path);\n\n  const setModalActive = async () => {\n    const modal = document.querySelector(`#modal_${item.id}`);\n    const videos = await tmdbApi.getVideos(category.movie, item.id);\n\n    if (videos.data.results.length > 0) {\n      const videSrc = \"https://www.youtube.com/embed/\" + videos.data.results[0].key;\n      modal.querySelector(\".modal__content > iframe\").setAttribute(\"src\", videSrc);\n    } else {\n      modal.querySelector(\".modal__content\").innerHTML = \"No trailer\";\n    }\n\n    modal.classList.toggle(\"active\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `hero-slide__item ${props.className}`,\n    style: {\n      backgroundImage: `url(${background})`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hero-slide__item__content container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hero-slide__item__content__info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"title\",\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overview\",\n          children: item.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btns\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => navigate(\"/movie/\" + item.id),\n            children: \"Watch now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(OutlineButton, {\n            onClick: setModalActive,\n            children: \"Watch trailer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hero-slide__item__content__poster\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: apiConfig.w500Image(item.poster_path),\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(HeroSlideItem, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c2 = HeroSlideItem;\n\nconst TrailerModal = props => {\n  _s3();\n\n  const item = props.item;\n  const iframeRef = useRef(null);\n\n  const onClose = () => iframeRef.current.setAttribute(\"src\", \"\");\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    active: false,\n    id: `modal_${item.id}`,\n    children: /*#__PURE__*/_jsxDEV(ModalContent, {\n      onClose: onClose,\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        ref: iframeRef,\n        width: \"100%\",\n        height: \"500px\",\n        title: \"trailer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(TrailerModal, \"HIHwOEFe13FUYgDPZ3BBEH738M4=\");\n\n_c3 = TrailerModal;\nexport default HeroSlide;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"HeroSlide\");\n$RefreshReg$(_c2, \"HeroSlideItem\");\n$RefreshReg$(_c3, \"TrailerModal\");","map":{"version":3,"sources":["/Users/macbook/Downloads/Movie-main 2/src/components/hero-slide/HeroSlide.jsx"],"names":["React","useState","useEffect","useRef","SwiperCore","Autoplay","Swiper","SwiperSlide","Button","OutlineButton","Modal","ModalContent","tmdbApi","category","movieType","apiConfig","useNavigate","HeroSlide","use","movieItems","setMovieItems","getMovies","params","page","response","getMoviesList","popular","data","results","slice","console","log","map","item","i","isActive","HeroSlideItem","props","navigate","background","originalImage","backdrop_path","poster_path","setModalActive","modal","document","querySelector","id","videos","getVideos","movie","length","videSrc","key","setAttribute","innerHTML","classList","toggle","className","backgroundImage","title","overview","w500Image","TrailerModal","iframeRef","onClose","current"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport SwiperCore, { Autoplay } from \"swiper\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport Button, { OutlineButton } from \"../button/Button\";\nimport Modal, { ModalContent } from \"../modal/Modal\";\nimport tmdbApi, { category, movieType } from \"../../api/tmdbApi\";\nimport apiConfig from \"../../api/apiConfig\";\nimport \"./hero-slide.scss\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst HeroSlide = () => {\n  SwiperCore.use([Autoplay]);\n\n  const [movieItems, setMovieItems] = useState([]);\n\n  useEffect(() => {\n    const getMovies = async () => {\n      const params = { page: 1 };\n      try {\n        const response = await tmdbApi.getMoviesList(movieType.popular, {\n          params,\n        });\n\n        setMovieItems(response.data.results.slice(1, 4));\n      } catch {\n        console.log(\"error\");\n      }\n    };\n    getMovies();\n  }, []);\n\n  return (\n    <div className=\"hero-slide\">\n      <Swiper\n        modules={[Autoplay]}\n        grabCursor={true}\n        spaceBetween={0}\n        slidesPerView={1}\n      // autoplay={{delay: 3000}}\n      >\n        {movieItems.map((item, i) => (\n          <SwiperSlide key={i}>\n            {({ isActive }) => (\n              <HeroSlideItem\n                item={item}\n                className={`${isActive ? \"active\" : \"\"}`}\n              />\n            )}\n          </SwiperSlide>\n        ))}\n      </Swiper>\n      {movieItems.map((item, i) => (\n        <TrailerModal key={i} item={item} />\n      ))}\n    </div>\n  );\n};\n\nconst HeroSlideItem = (props) => {\n  let navigate = useNavigate();\n\n  const item = props.item;\n\n  const background = apiConfig.originalImage(\n    item.backdrop_path ? item.backdrop_path : item.poster_path\n  );\n\n  const setModalActive = async () => {\n    const modal = document.querySelector(`#modal_${item.id}`);\n\n    const videos = await tmdbApi.getVideos(category.movie, item.id);\n    if (videos.data.results.length > 0) {\n      const videSrc =\n        \"https://www.youtube.com/embed/\" + videos.data.results[0].key;\n      modal\n        .querySelector(\".modal__content > iframe\")\n        .setAttribute(\"src\", videSrc);\n    } else {\n      modal.querySelector(\".modal__content\").innerHTML = \"No trailer\";\n    }\n\n    modal.classList.toggle(\"active\");\n  };\n\n  return (\n    <div\n      className={`hero-slide__item ${props.className}`}\n      style={{ backgroundImage: `url(${background})` }}\n    >\n      <div className=\"hero-slide__item__content container\">\n        <div className=\"hero-slide__item__content__info\">\n          <h2 className=\"title\">{item.title}</h2>\n          <div className=\"overview\">{item.overview}</div>\n          <div className=\"btns\">\n            <Button onClick={() => navigate(\"/movie/\" + item.id)}>\n              Watch now\n            </Button>\n            <OutlineButton onClick={setModalActive}>\n              Watch trailer\n            </OutlineButton>\n          </div>\n        </div>\n        <div className=\"hero-slide__item__content__poster\">\n          <img src={apiConfig.w500Image(item.poster_path)} alt=\"\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst TrailerModal = (props) => {\n  const item = props.item;\n\n  const iframeRef = useRef(null);\n\n  const onClose = () => iframeRef.current.setAttribute(\"src\", \"\");\n\n  return (\n    <Modal active={false} id={`modal_${item.id}`}>\n      <ModalContent onClose={onClose}>\n        <iframe\n          ref={iframeRef}\n          width=\"100%\"\n          height=\"500px\"\n          title=\"trailer\"\n        ></iframe>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default HeroSlide;\n"]},"metadata":{},"sourceType":"module"}